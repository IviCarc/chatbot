BOT:
    Leer más de un PDF. ✔️
    Prompt personalizado. ✔️
    Optimizar carga de los documentos.
    Mejores respuestas.
    Mensajes de bienvenida.
    Indicaciones claras sobre funcionamiento.

FRONTEND.:
    Enviar mensajes.
    Enviar POST a la API para agendar la reunión. ✔️
    Funcionalidad CRUD ✔️
    Utilizar un calendario para agendar reuniones en fechas disponibles. (no fechas disponibles) ✔️

API:
    GET => Envía las reuniones programadas. ✔️
    GET => Envía una reunion por ID. (devuelve un array en vez de un solo obj) ✔️
    GET => Envía las reuniones de un cliente ✔️
    GET => Envía días disponibles.
    POST => agende la reunión. ✔️
    DELETE => Eliminar reuniones. ✔️
    PUT => Editar fecha de las reuniones ✔️
    [OPCIONAL] POST >= Cargar archivos PDF para entrenar al bot.
    AGREGAR ORM ✔️

    UTILIZAR BLUEPRINT ✔️

    Enviar un mail al anfitrion para avisarle de la reunión
    Enviar errores al usuario como por ejemplo fechas invalidas o ya ocupadas

27/06/23
    Si el usuario escribe "AGENDAR", popea un form (nombre, telefono, correo, calendario, fechahora) ✔️
    Conectar el form con la DB ✔️

28/06/23
    Estilos al FORM ✔️
    ORM (SQLAlchemy) ✔️

29/06/23
    Input calendario, restringir: No poder seleccionar fechas anterior al día actual y entre X e Y hs ✔️
    Elegir un anfitrion de manera random, sin importar disponibilidad (temporal)
    Frontend CRUD ✔️

05/07/23
    login✔️
    Pagina error mala contraseña✔️

06/07/23
    Enviar mail con la información del cliente a los anfitriones para que confirmen la reunion y sus necesidades
    Que hacer si el cliente no puede ninguna de las fechas disponibles
    Horario de reuniones solo de lunes a viernes de 14 a 15